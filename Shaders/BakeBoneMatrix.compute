/**
    Bone matrix write to _ResultTex(1 matrix = 3 pixels)

    Dispatch 1 time when AnimationClip.SampleAnition 
*/
#pragma kernel BakeBoneMatrix

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> _ResultTex;
uint _YStart;
uint2 _YStartEnd; // x: yStart, y : yEnd
StructuredBuffer<float4x4> _BindposesBuffer;
StructuredBuffer<float4x4> _BonesBuffer;
float4x4 _RootWorldToLocal;

[numthreads(8,8,1)]
void BakeBoneMatrix (uint3 id : SV_DispatchThreadID)
{
    uint frameCount = _YStartEnd.y - _YStartEnd.x;

    uint count,stride;
    _BonesBuffer.GetDimensions(count/**/,stride/**/);

    uint bonesAFrame = count/frameCount;

    uint yOffset = id.x /bonesAFrame;
    uint boneId = id.x;
    uint bindboneId = boneId % bonesAFrame;

    float4x4 boneMat = _BonesBuffer[boneId];
    float4x4 bindpose = _BindposesBuffer[bindboneId];
    // float4x4 mat = mul(_RootWorldToLocal,mul(boneMat,bindpose));
    float4x4 mat = mul(boneMat,bindpose);

    uint xStart = bindboneId * 3; // a matrix 3 pixel

    uint2 uvId = {xStart,_YStart+yOffset};
    [unroll(3)]
    for(uint i=0;i<3;i++){
        _ResultTex[uvId.xy+uint2(i,0)] = mat[i];
    }
}
